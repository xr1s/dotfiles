// help coc-config.txt
{
  "suggest.snippetIndicator": "", // 不提示是否为 snippet（默认有一个后缀的 ~ 表示为 snippet）
  "suggest.disableMenu": true, // 不在补全列表右侧展示 [LS]
  "suggest.completionItemKindLabels": {
    "keyword": "",
    "variable": "",
    "value": "",
    "operator": "Ψ",
    "function": "ƒ",
    "reference": "渚",
    "constant": "",
    "method": "",
    "struct": "",
    "class": "",
    "interface": "",
    "text": "",
    "enum": "",
    "enumMember": "",
    "module": "",
    "color": "",
    "property": "",
    "field": "料",
    "unit": "",
    "event": "鬒",
    "file": "",
    "folder": "",
    "snippet": "",
    "typeParameter": "",
    "default": ""
  },
  // 错误、警告等提示符，全部使用默认值
  // 特殊表情字符在不同端表现不一致（字符宽度的判断不同），可能会导致终端显示异常
  // 主要是存在 U+FE0F VARIATION SELECTOR 的情况，Windows Terminal 会显示异常
  "diagnostic.errorSign": ">>",
  "diagnostic.warningSign": ">>",
  "diagnostic.infoSign": ">>",
  "diagnostic.hintSign": ">>",
  "diagnostic.checkCurrentLine": true, // 当光标处无诊断信息时，显示该行的报错
  "codeLens.enable": true,
  // 保存时自动格式化
  "coc.preferences.formatOnSaveFiletypes": [
    "c",
    "cpp",
    "go",
    "java",
    "python",
    "ruby",
    "rust"
  ],
  "coc.source.file.triggerCharacters": [
    "/"
  ],
  // 启用 neovim 自带的 semanticTokens 功能
  "semanticTokens.filetypes": [
    "*"
  ],
  // C++ Clangd
  "clangd.enabled": true,
  "clangd.arguments": [
    "--all-scopes-completion",
    "--background-index",
    "--clang-tidy",
    "--completion-style=detailed",
    "--cross-file-rename",
    "--header-insertion=iwyu",
    "--limit-results=0",
    "--pch-storage=memory"
  ],
  "clangd.fallbackFlags": [
    "-std=c++20"
  ],
  "clangd.checkUpdates": true,
  "clangd.compilationDatabasePath": "build/compile_commands.json",
  "clangd.inlayHints.sep": "▶ ",
  // Go GoPLS
  "go.goplsOptions": {
    "gofumpt": true,
    "usePlaceholders": true,
    "semanticTokens": true,
    "allowModfileModifications": true,
    "allowImplicitNetworkAccess": true,
    "staticcheck": true
  },
  // Python Pyright
  "python.formatting.provider": "black",
  "python.sortImports.path": "isort",
  // Ruby Solargraph
  "solargraph.diagnostics": true,
  "solargraph.formatting": true,
  "solargraph.transport": "stdio",
  // Rust Rust-Analyzer
  "rust-analyzer.checkOnSave.command": "clippy",
  "rust-analyzer.inlayHints.chainingHintsSeparator": "▶ ",
  "rust-analyzer.inlayHints.typeHintsSeparator": "▶ ",
  "rust-analyzer.server.extraEnv": {
  },
  // Scala Metals
  "metals.statusBarEnabled": true,
  "metals.enable": false,
  // Vim Vim-LSP
  "vimlsp.indexes.count": 100,
  "vimlsp.indexes.gap": 1,
  // 自定义 LSP 配置
  "languageserver": {
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": [
        "--lsp"
      ],
      "rootPatterns": [
        "*.cabal",
        "stack.yaml",
        "cabal.project",
        "package.yaml",
        "hie.yaml"
      ],
      "filetypes": [
        "haskell",
        "lhaskell"
      ]
    },
    "kotlin": {
      "command": "kotlin-language-server",
      "filetypes": [
        "kotlin"
      ],
      "shell": true
    }
  }
}
